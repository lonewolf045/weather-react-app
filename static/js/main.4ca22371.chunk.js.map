{"version":3,"sources":["Switch.js","Footer.js","WeatherTile.js","Header.js","404NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Switch","this","props","isOn","className","checked","onChange","onClick","id","type","class","htmlFor","assignIcons","React","Component","Footer","href","target","src","alt","photographer","WeatherTile","windDirection","weather","appearance","icon","celsius","handleToogle","console","log","backgroundImage","style","original","name","country","iconUrl","tempUnit","main","temp","toFixed","convertToF","feels_like","wind","speed","direcUrl","Math","round","deg","humidity","pressure","bind","split","photographer_url","Header","event","detail","enteredCity","value","e","handleSubmit","setCity","defaultProps","NotFound","App","state","city","fetched","handleData","unit","setState","prevState","weatherData","sys","date","Date","dt","timezone","client","createClient","query","description","photos","search","per_page","page","random","queryResult","ecity","responseUrl","fetch","mode","response","json","getBackgroundImage","error","getWeather","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4ca22371.chunk.js","sourcesContent":["import React from 'react';\nimport './Switch.css';\nimport './css/weather-icons.min.css';\n\nclass Switch extends React.Component {\n    assignIcons() {\n        if(this.props.isOn === true) {\n            return 'wi wi-celsius left';\n        } else {\n            return 'wi wi-fahrenheit right';\n        }\n    }\n    assignClass() {\n        if(this.props.isOn === true) {\n            return 'left';\n        } else {\n            return 'right';\n        }\n    }\n    render() {\n        return (\n            <div className = {this.props.className}>\n            <input\n                checked = {this.props.isOn}\n                onChange= {() => {this.props.onClick();}}\n                // checked={this.props.isOn}\n                className=\"react-switch-checkbox\"\n                id={`react-switch-new`}\n                type=\"checkbox\"\n            />\n            <label\n                className={`${this.props.class} react-switch-label`}\n                htmlFor={`react-switch-new`}\n            >\n                <i className = {`${this.assignIcons()} tempIcon`}/>\n                <span className={`react-switch-button`} />\n            </label>\n            </div>\n        );\n    }\n};\n\nexport default Switch;","/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\nimport './Footer.css';\nimport './css/all.min.css';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <div className = 'footer'>\n                <div className = 'pexelLogo flexI'>\n                    <a href=\"https://www.pexels.com\" target = '_blank'>\n                        <img className = 'logo' src=\"https://images.pexels.com/lib/api/pexels-white.png\" alt = 'Pexel'/>\n                    </a>\n                </div>\n                <div className = 'photographer flexI'>\n                    Clicked by : <a href = {this.props.photographer[1]} target = '_blank'>{this.props.photographer[0]}</a>\n                </div>\n                <div className = 'oWM flexI'>\n                    <a href = 'https://openweathermap.org/' target = '_blank'>\n                        <img className = 'logo' src = \"https://19yw4b240vb03ws8qm25h366-wpengine.netdna-ssl.com/wp-content/uploads/OPENWEATHER-300x136.png\" alt = 'OWM' />\n                    </a>\n                </div>\n                <div className = 'gitHub flexI'>\n                    <a href = 'https://github.com/lonewolf045/weather-react-app' target = '_blank'><i class=\"fab fa-github\"/></a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Footer;","/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\nimport './WeatherTile.css';\nimport './css/weather-icons.min.css';\nimport './css/all.min.css';\nimport './css/weather-icons-wind.min.css'\nimport Switch from './Switch';\nimport Footer from './Footer';\n\nclass WeatherTile extends React.Component {\n  \n  convertToF(celsius) {\n    return celsius * 9/5 + 32;\n  }\n  \n  handleToogle() {\n    this.props.handleToogle();\n    console.log(this.props.backgroundImage);\n  }\n  windDirection = [\"N\",\"NNE\",\"NE\",\"ENE\",\"E\",\"ESE\",\"SE\",\"SSE\",\"S\",\"SSW\",\"SW\",\"WSW\",\"W\",\"WNW\",\"NW\",\"NNW\",\"N\"];\n  src = `http://openweathermap.org/img/wn/${this.props.weather.appearance.icon}.png`\n    render() {\n      return (\n        <div\n          style = {{backgroundImage: `url(${this.props.backgroundImage.src.original})`}}\n         id = 'weatherTile'>\n          <div className = 'tile'>\n            <div className = 'weatherName'>{this.props.weather.name},{this.props.weather.country}</div>\n            {/* <div className = 'weatherDate'>{this.props.weather.date.toString()}</div> */}\n            <div className = 'wIcon'>\n              <div className = 'weatherIcon'><i className = {this.props.weather.appearance.iconUrl}></i></div>\n            </div>\n            <div className = 'wI'>\n              <div className = 'wTemp'>\n                {this.props.tempUnit === 'Celsius' ? <div className = 'weatherTemp'>{(this.props.weather.main.temp - 273).toFixed(0)}&#176;</div> : <div className = 'weatherTemp'>{this.convertToF(this.props.weather.main.temp - 273).toFixed(0)}&#176;</div>}\n                {this.props.tempUnit === 'Celsius' ? <div className = 'weatherTempFeels'>Feels like: {(this.props.weather.main.feels_like - 273).toFixed(0)}&#176;</div> : <div className = 'weatherTempFeels'>Feels like: {this.convertToF(this.props.weather.main.feels_like - 273).toFixed(0)}&#176;</div>}\n              </div>\n              <div className = 'wWind'>\n                <div className = 'weatherWindSpeed'><i className=\"fas fa-wind\"></i>{(this.props.weather.wind.speed * 2.23694).toFixed(2) } MPH</div>\n                <div className = 'weatherWindDirection'><i className = {this.props.weather.wind.direcUrl}/>{ this.windDirection[Math.round(this.props.weather.wind.deg / 22.5)] }</div>\n              </div>\n            </div>\n            <div className = 'wInfo'>\n              <div className = 'weatherHumidity'><i className=\"wi wi-humidity\"></i> {(this.props.weather.main.humidity)}%</div>\n              <div className = 'weatherPressure'><i className=\"wi wi-barometer\"></i> {(this.props.weather.main.pressure)} hPa</div>\n            </div>\n            <Switch className = 'toogleSwitch' isOn = {this.props.isOn} onClick = {this.handleToogle.bind(this)} class = {this.props.weather.appearance.iconUrl.split(' ')[2]}/>  \n          </div>\n          <Footer photographer = {[this.props.backgroundImage.photographer,this.props.backgroundImage.photographer_url]}/>\n        </div>\n      );\n    }\n}\n\nexport default WeatherTile;","import React from 'react';\nimport './Header.css';\nimport './css/all.min.css';\n\nclass Header extends React.Component {\n    setCity (event) {\n      this.props.detail.enteredCity = event.target.value;\n    }\n    handleSubmit(e) {\n      console.log(this.props.detail.enteredCity);\n      this.props.handleSubmit(this.props.detail.enteredCity);\n    }\n    render() {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div className = 'heading'>\n              Weather\n            </div>\n            <div className = 'locationSearch'>\n              <input className = 'locationInput' onChange = {this.setCity.bind(this)}></input>\n              <button className = 'locationSubmit' onClick = {this.handleSubmit.bind(this)}><i className=\"fas fa-search\"></i></button>\n            </div>  \n          </header>\n        </div>\n      );\n    }\n  }\nHeader.defaultProps = {\n    detail : {\n        enteredCity : ''\n    }\n}\n\nexport default Header;\n\n","import React from 'react';\nimport './404NotFound.css';\nimport './css/all.min.css';\n\nclass NotFound extends React.Component{\n    render() {\n        return (\n            <div className = 'notFound'>\n                <div className = 'errorMessage'>\n                    <i className=\"fas fa-exclamation-triangle error-icon\"></i>\n                    <div>Error 404: Not Found</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport './App.css';\nimport './css/weather-icons.min.css';\nimport './css/all.min.css';\nimport WeatherTile from './WeatherTile';\nimport Header from './Header';\nimport NotFound from './404NotFound';\nimport { createClient } from 'pexels';\n\n\n\nconst getIconClass = (icon) => {\n  const classes = {\n    '01d': 'fas fa-sun sun',\n    '01n': 'fas fa-moon moon',\n    '02d': 'fas fa-cloud-sun rain-sun',\n    '02n': 'fas fa-cloud-moon rain-moon',\n    '03d': 'fas fa-cloud day',\n    '03n': 'fas fa-cloud night',\n    '04d': 'fas fa-cloud-meatball day',\n    '04n': 'fas fa-cloud-meatball night',\n    '09d': 'fas fa-cloud-showers-heavy day',\n    '09n': 'fas fa-cloud-showers-heavy night',\n    '10d': 'fas fa-cloud-sun-rain rain-sun',\n    '10n': 'fas fa-cloud-moon-rain rain-moon',\n    '11d': 'fas fa-bolt bolt-day',\n    '11n': 'fas fa-bolt bolt-night',\n    '13d': 'far fa-snowflake day',\n    '13n': 'far fa-snowflake night',\n    '50d': 'fas fa-smog day',\n    '50n': 'fas fa-smog night',\n  };\n  return classes[icon];\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weather : null,\n      city : '',\n      tempUnit: 'Celsius',\n      isOn: true,\n      fetched: true\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleData = this.handleData.bind(this);\n    this.handleToogle = this.handleToogle.bind(this);\n  }\n  componentWillMount() {\n    this.handleSubmit('New Delhi');\n  }\n\n  handleToogle() {\n    let unit;\n    if(this.state.tempUnit === 'Celsius') {\n      unit = 'Fahrenhiet';\n    } else {\n      unit = 'Celsius';\n    }\n    console.log('Entered');\n    this.setState(prevState => ({\n      isOn : !prevState.isOn,\n      tempUnit : unit\n    }), () => {console.log(this.state)});\n  }\n\n  handleData(weatherData) {\n    this.setState({\n      weather : {\n        appearance : weatherData.weather[0],\n        main : weatherData.main,\n        wind : weatherData.wind,\n        name : weatherData.name,\n        country : weatherData.sys.country,\n        date : new Date(weatherData.dt*1000-(weatherData.timezone*1000)),\n        backgroundImage: weatherData.backgroundImage\n      },\n      fetched : true\n    },() => {console.log(this.state.weather,this.state)});\n  }\n\n  async getBackgroundImage(weatherData) {\n    const client = createClient('563492ad6f91700001000001f0bee6436bc64621b8f0736144ac4671');\n    const query = `${weatherData.weather[0].description}`;\n    let queryResult = await client.photos.search({query,per_page: 1,page: Math.round(Math.random() * 100)});\n    console.log(queryResult.photos[0]);\n    return queryResult.photos[0];\n  }\n\n  async getWeather(ecity) {\n    try {\n        //let apiKey = `e1a30bf2f5ec7db7e65fcfac6fc61d03`;\n        let responseUrl = `http://api.openweathermap.org/data/2.5/weather?q=${ecity}&appid=e1a30bf2f5ec7db7e65fcfac6fc61d03`;\n        let response = await fetch(responseUrl, {mode: 'cors'});\n        let weatherData = await response.json();\n        console.log(weatherData);\n        //let iconUrl = await fetch(`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}.png`, {mode: 'cors'});\n        weatherData.weather[0].iconUrl = getIconClass(weatherData.weather[0].icon);\n        weatherData.wind.direcUrl = `wi wi-wind towards-${weatherData.wind.deg}-deg`;\n        weatherData.backgroundImage = await this.getBackgroundImage(weatherData);\n        this.handleData(weatherData);\n    } catch(err) {\n        this.setState({\n          fetched: false\n        });\n        console.error(err);\n    }\n  }\n\n  handleSubmit(enteredCity) {\n    console.log('Pressed');\n    this.setState({\n      city : enteredCity,\n      weather : null\n    },() => this.getWeather(this.state.city)); \n    //let city = input.value;\n\n  }\n  render() {\n    return (\n      <div id = 'container'>\n        <Header handleSubmit = {this.handleSubmit}/>\n        {this.state.weather ? <WeatherTile weather = {this.state.weather} isOn = {this.state.isOn} tempUnit = {this.state.tempUnit} handleToogle = {this.handleToogle} backgroundImage = {this.state.weather.backgroundImage} /> : this.state.fetched ? <div />  :<NotFound />} \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}